ballot_it
list_it_top <- list_it %>%
group_by(Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
list_reg_top <- list_reg %>%
group_by(Region, Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
# To this top parties, we would also like to associate their poilitical collocation
# (Far-Left,Left,Centre-Left,Centre,Centre-Right,Syncretic,Right,Far-Right)
party_collocation <- read.csv(
"./source/elections/party-collocation.csv",
header = TRUE,
sep = ";"
)
# TODO - Correct join?
list_it_top <- left_join(
list_it_top,
party_collocation
)
list_reg_top <- left_join(
list_reg_top,
party_collocation
)
empl_rate_raw <- read.csv(
"./source/labour/employment-rate.csv",
header = TRUE,
sep = ","
)
head(empl_rate_raw)
# Drop
empl_rate <- empl_rate_raw %>%
subset(select = -c(ITTER107, TIPO_DATO_FOL, SEXISTAT1, ETA1, TITOLO_STUDIO, TIME, Tipo.dato, Flag.Codes, Flags))
# Translate
colnames(empl_rate) <- c("Region", "Sex", "Age", "Education.level", "Year", "Value")
macro_regions <- c("Nord", "Nord-ovest", "Nord-est", "Centro", "Mezzogiorno")
#All quarterly values for the year column contain letters. We filter them out by trying to convert to integer and then checking if the resul is Na
empl_rate <- empl_rate %>%
filter(
Education.level == "totale" &
Sex == "totale" &
Age == "15-64 anni" &
!is.na(as.numeric(Year)) &
Region %notin% macro_regions
) %>%
subset(select = -c(Education.level, Sex, Age))
empl_rate_it <- empl_rate %>%
filter(Region == 'Italia') %>%
subset(select = -Region) %>%
mutate(Year = as.integer(Year)) %>%
rename(Empl.Rate = Value)
empl_rate_reg <- empl_rate %>%
filter(Region != 'Italia') %>%
mutate(Year = as.integer(Year)) %>%
rename(Empl.Rate = Value)
empl_rate_it
empl_rate_reg
# Centroid latitude and longitude in order to find the circle marker center for leaflet
italy <- ne_states(country="Italy", returnclass="sf") %>%
rename(Region = region) %>%
group_by(Region) %>%
summarise() %>%
mutate(
Region = str_to_upper(Region),
Region = case_when(
Region == 'APULIA' ~ 'PUGLIA',
Region == 'SICILY' ~ 'SICILIA',
Region == 'TRENTINO-ALTO ADIGE' ~ 'TRENTINO ALTO ADIGE',
Region == 'EMILIA-ROMAGNA' ~ 'EMILIA ROMAGNA',
TRUE ~ Region
),
centroid_lat = st_coordinates(st_centroid(geometry))[,1],
centroid_long = st_coordinates(st_centroid(geometry))[,2]
)
# Building aggregate lists
aggregate_list_it <- list_it_top %>%
group_by(Year, House) %>%
arrange(-Votes) %>%
mutate(
Party = paste(Party, Votes, sep = ':', collapse = '<br/>'),
Collocation = first(Collocation)
) %>%
subset(select = -c(Votes)) %>%
distinct(Year, House, Party, Collocation)
aggregate_list_reg <- list_reg_top %>%
group_by(Year, Region, House) %>%
arrange(-Votes) %>%
mutate(
Party = paste(Party, Votes, sep = ':', collapse = '<br/>'),
Collocation = first(Collocation)
) %>%
subset(select = -c(Votes)) %>%
distinct(Region, Year, House, Party, Collocation)
# Contains geom data + regional data for both lists and ballots
italy <- italy %>%
inner_join(ballot_reg, by='Region') %>%
inner_join(aggregate_list_reg, by=c('Region', 'Year', 'House'))
italy
# Filtering
italy_filtered <- italy %>%
filter(Year == 2018, House == 'Chamber')
ballot_it_filtered <- ballot_it %>%
filter(Year == 2018, House == 'Chamber')
# Label for bottom-right persistent legend
it_labels <- paste(
'Voter turnout: ',
ballot_it_filtered$Voter.turnout,
'<br/>',
'Parties: ',
aggregate_list_it$Party
) %>%
lapply(htmltools::HTML)
# Label for individual regions
reg_labels <- paste(
'<strong>Region: ', italy_filtered$Region, '</strong><br/>',
'Voter turnout: ', italy_filtered$Voter.turnout, '<br/>',
'Parties: ', italy_filtered$Party
) %>%
lapply(htmltools::HTML)
pal <- colorNumeric(palette = 'YlOrRd',domain = italy_filtered$Voter.turnout)
leaflet(italy_filtered) %>%
addPolygons(
stroke = TRUE,
color = 'Grey',
weight = 1.5,
label = reg_labels,
fillColor = ~pal(italy_filtered$Voter.turnout),
highlightOptions = highlightOptions(color = "grey", weight = 3, bringToFront = TRUE)
) %>%
addLegend(pal = pal,
values = italy_filtered$Voter.turnout,
opacity = 0.7,
title = 'Voter Turnout',
position = 'bottomright')
# Filtering
italy_filtered <- italy %>%
filter(Year == 2018, House == 'Chamber')
ballot_it_filtered <- ballot_it %>%
filter(Year == 2018, House == 'Chamber')
# Label for bottom-right persistent legend
it_labels <- paste(
'Voter turnout: ',
ballot_it_filtered$Voter.turnout,
'<br/>',
'Parties: ',
aggregate_list_it$Party
) %>%
lapply(htmltools::HTML)
# Label for individual regions
reg_labels <- paste(
'<strong>Region: ', italy_filtered$Region, '</strong><br/>',
'Voter turnout: ', italy_filtered$Voter.turnout, '<br/>',
'Parties: ', italy_filtered$Party
) %>%
lapply(htmltools::HTML)
pal <- colorNumeric(palette = 'YlOrRd',domain = italy_filtered$Voter.turnout)
leaflet(italy_filtered) %>%
addPolygons(
stroke = TRUE,
color = 'Grey',
weight = 1.5,
label = reg_labels,
fillColor = ~pal(italy_filtered$Voter.turnout),
highlightOptions = highlightOptions(color = "grey", weight = 3, bringToFront = TRUE)
) %>%
addLegend(pal = pal,
values = italy_filtered$Voter.turnout,
opacity = 0.7,
title = 'Voter Turnout',
position = 'bottomright')
palColl <-colorFactor(viridis(7), italy_filtered$collocation)
collLabels <- unique(italy$Collocation)
italy_filtered
leaflet(italy_filtered) %>%
addPolygons(
stroke = TRUE,
color = 'Grey',
weight = 1.5,
label = reg_labels,
fillColor = ~palColl(italy_filtered$Collocation),
highlightOptions = highlightOptions(color = "grey", weight = 3, bringToFront = TRUE)
) %>%
addLegend(pal = palColl,
values = collLabels,
opacity = 0.7,
title = 'Top party collocation',
position = 'bottomright')
leaflet(italy_filtered) %>%
addCircleMarkers(
stroke = TRUE,
color = 'Grey',
weight = 1.5,
label = reg_labels,
italy_filtered$centroid_lat,
italy_filtered$centroid_long,
radius = sqrt(italy_filtered$Voters/10000),
fillColor = ~pal(italy_filtered$Voter.turnout)
) %>%
addLegend(pal = pal,
values = italy_filtered$Voter.turnout,
opacity = 0.7,
title = 'Voter Turnout',
position = 'bottomright')
ggplot(ballot_it, aes(x=Year, y=Voter.turnout, color=House)) +
ggtitle("Voter turnout") +
geom_line() +
geom_point() +
expand_limits(y=c(50, 100)) +
scale_x_continuous(breaks=election_years) +
scale_color_brewer(palette = "Set2") +
ylab('Voter turnout') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#geom_text_repel(aes(x=1948, label = 'Hello'))
# Y = Votes, X = years, Bar = divided by consitutents/voters (%)
ggplot(ballots_it) +
ggtitle("Voters/Constituents proportion") +
geom_hline(yintercept=mean(ballots_it$Voters), linetype='dotted')+
geom_col(aes(x=Year, y=Constituents, fill='Constituents'), colour='#000000') +
geom_col(aes(x=Year, y=Voters, fill='Voters'), colour='#000000') +
scale_x_continuous(breaks=election_years) +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
geom_density() +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
geom_density( aes(x=Year, y=Party, )) +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
geom_density( aes(x=Year, y=Party)) +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
geom_density_ridges() +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
geom_density(aes(y=Year, x=Party)) +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# Diversity - Total nr of parties voted each election
list_it_grouped <- list_it %>%
group_by(Year, House) %>%
summarise(Party = n_distinct(Party))
ggplot(list_it_grouped, aes(x=Year, y=Party, fill=House)) +
ggtitle("Total nr. of parties per election year") +
geom_col(colour='#000000') +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
ylab('Nr. of parties') +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#Heatmap x=year, y=region, fill=collocation
ggplot(aggregate_list_reg, aes(x=Year,y=Region,fill=Collocation)) +
ggtitle("Political collocation of top voted parties") +
geom_tile(colour='#000000') +
scale_x_continuous(breaks=election_years) +
scale_fill_brewer(palette = "Set2") +
facet_grid(vars(House)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
aggregate_list_reg
#x=year, y=% of votes among the top parties, fill=collocation
list_coll_percent <- list_reg_top %>%
group_by(Year,House,Collocation) %>%
summarise(Votes = sum(Votes)) %>%
mutate(Percent = (Votes/sum(Votes)) * 100)  %>%
arrange(Year, House, Collocation)
list_coll_percent
list_coll_grouped <- list_coll_percent  %>%
filter(!(grepl('Syncretic', Collocation) & (Year < 2013))) %>%
mutate(Collocation =
ifelse(
grepl('Left', Collocation),
'Left',
ifelse(
grepl('Right', Collocation),
'Right',
Collocation
)
)
) %>%
group_by(Year,House,Collocation) %>%
summarise_all(sum)
coll_years_anim <- ggplot(
list_coll_grouped,
aes(x=Year, y=Percent, color=Collocation)) +
ggtitle("Collocation of top parties") +
geom_line() +
geom_point() +
geom_vline(xintercept=1994, color='Grey', linetype=2, alpha=0.5) +
geom_vline(xintercept=2013, color='Grey', linetype=2, alpha=0.5) +
geom_text(aes(x = Year + 1, label = Collocation), hjust = 0) +
scale_x_continuous(breaks=election_years) +
scale_color_brewer(palette = "Set2") +
ylab('% of votes') +
facet_grid(vars(House)) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "grey", fill = NA)
) +
transition_reveal(Year) +
ease_aes("linear") +
enter_fade() +
exit_fade()
coll_years_anim
list_coll_grouped
list_it_top <- list_it %>%
group_by(Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
list_reg_top <- list_reg %>%
group_by(Region, Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
# To this top parties, we would also like to associate their poilitical collocation
# (Far-Left,Left,Centre-Left,Centre,Centre-Right,Syncretic,Right,Far-Right)
party_collocation <- read.csv(
"./source/elections/party-collocation.csv",
header = TRUE,
sep = ";"
)
dim(list_it_top)
dim(list_reg_top)
# TODO - Correct join?
list_it_top <- left_join(
list_it_top,
party_collocation
)
list_reg_top <- left_join(
list_reg_top,
party_collocation
)
dim(list_it_top)
dim(list_reg_top)
list_it_top <- list_it %>%
group_by(Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
list_reg_top <- list_reg %>%
group_by(Region, Year, House) %>%
filter(quantile(Votes, 0.7)<Votes)
# To this top parties, we would also like to associate their poilitical collocation
# (Far-Left,Left,Centre-Left,Centre,Centre-Right,Syncretic,Right,Far-Right)
party_collocation <- read.csv(
"./source/elections/party-collocation.csv",
header = TRUE,
sep = ";"
)
# TODO - Correct join?
list_it_top <- left_join(
list_it_top,
party_collocation
)
list_reg_top <- left_join(
list_reg_top,
party_collocation
)
#anim_save("collocation_over_years.gif")
include_graphics("collocation_over_years.gif")
empl_rate_coll <- full_join(
empl_rate_it,
list_coll_grouped
)
empl_rate_coll
empl_rate_coll <- left_join(
empl_rate_it,
list_coll_grouped
)
empl_rate_coll
empl_rate_coll <- inner_join(
empl_rate_it,
list_coll_grouped
)
empl_rate_coll
#facet_grid(vars(list_coll_grouped$House)) +
p1 <- ggplot(empl_rate_it, aes(x=Year, y=Empl.Rate)) +
ggtitle("Employment rate") +
geom_line() +
geom_point() +
scale_x_discrete(limits=election_years[election_years>=1976]) +
geom_vline(xintercept=1994, color='Grey', linetype=2, alpha=0.5) +
geom_vline(xintercept=2013, color='Grey', linetype=2, alpha=0.5) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "grey", fill = NA)
)
p2 <- ggplot(list_coll_grouped[list_coll_grouped$House == 'Senate',], aes(x=Year, y=Percent, color=Collocation)) +
geom_line() +
theme_bw()
p1+ p2$layers[[1]]
#
#  geom_line(
#    data=list_coll_grouped[list_coll_grouped$House == 'Senate',],
#    aes(x=Year, y=Percent, color=Collocation)
#  ) +
senate_seats <- read.csv(
"./source/elections/Senate-seats.csv",
header = TRUE,
sep = ";"
) %>%
subset(select=-House)
senate_seats
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput(
inputId =  'year_sel',
label = "Select year:",
choices = election_years
)
),
mainPanel(
plotOutput('seats')
)
)
)
server <- function(input, output, session) {
# Filtering
senate_react <- reactive({
#senate_seats %>% filter(Year == input$year_sel)
senate_seats[senate_seats$Year==input$year_sel,]
})
semicricle_react <- reactive({
senate_react() %>%
parliament_data(type = "semicircle",
parl_rows = 8,
party_seats = senate_react()$Seats)
})
output$seats <- renderPlot({
semicricle_react() %>% ggplot(aes(x=x, y=y, colour=Party)) +
ggtitle("Senate seats") +
geom_parliament_seats() +
theme_ggparliament()
})
}
shinyApp(ui, server)
